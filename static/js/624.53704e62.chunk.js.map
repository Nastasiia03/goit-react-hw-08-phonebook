{"version":3,"file":"static/js/624.53704e62.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/selectors.js","formValidation/formValidation.js","components/ContactForm/ContactForm.js","components/ContactModal/UpdateContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as FormikForm, Field as FormikField} from 'formik';\n\nexport const Form = styled(FormikForm)`\nwidth: 350px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\npadding: 20px;\nborder: 1px solid #2a2a2a;\ngap: 20px;\nmargin-bottom: 10px;\nbackground-color: #37474f; \nborder-radius: 10px;\nbox-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n`\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  color: #a7a0a0;\n  font-size: 15px;\n`;\n\nexport const Field = styled(FormikField)`\nwidth: 300px;\nheight: 30px;\nborder: \"1px solid #a7a0a0\";\nborder-radius: 6px;\nbackground-color: transparent;\ncolor: white;\npadding: 5px;\n`\n\nexport const ErrorMessage = styled.span`\n  color: red;\n  font-size: 12px;\n`;","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterName) => {\n        if (filterName !== \"\") {\n           return contacts.filter((contact => contact.name.toLowerCase().includes(filterName.toLowerCase())));\n        };\n        return contacts;\n        \n    }\n);\n\n","export function validateName(value) {\r\n   let error;\r\n   if (!value) {\r\n     error = 'Required';\r\n   } else if (!/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/i.test(value)) {\r\n     error = 'Invalid name';\r\n   }\r\n   return error;\r\n }\r\n \r\n export function validateNumber(value) {\r\n   let error;\r\n   if (!value) {\r\n     error = 'Required';\r\n   } else if (!/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(value)) {\r\n     error = 'Invalid number';\r\n   }\r\n   return error;\r\n }","import { Formik } from 'formik';\nimport { ErrorMessage, Field, Form, FormField } from './ContactForm.styled';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact} from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport { Button } from '@mui/material';\nimport { Typography } from '@mui/material';\nimport { validateName } from 'formValidation/formValidation';\nimport { validateNumber } from 'formValidation/formValidation';\n\n     \nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n    \n    return (\n    <Formik\n        initialValues={{ name: \"\", number: \"\" }}\n        onSubmit={(values, actions) => {\n          const sameName = contacts.find(contact => contact.name.toLowerCase().includes(values.name.toLowerCase()));\n          if (sameName) {\n            alert(`${values.name} is already in contacts`)\n          } else {\n            dispatch(addContact(values));\n          };\n          \n          actions.resetForm();\n         \n            }}>\n    {({ errors, touched }) => {\n          return (\n            <Form>\n              <Typography component=\"h1\" variant=\"h5\" color=\"#e5e1e1\" >Contact form</Typography>\n              <FormField>\n                Name\n                <Field name=\"name\" type=\"text\" validate={validateName} />\n                {errors.name && touched.name && <ErrorMessage>{errors.name}</ErrorMessage>}\n              </FormField>\n              <FormField>\n                Number\n                <Field name=\"number\" type=\"tel\" validate={validateNumber} />\n                {errors.number && touched.number && <ErrorMessage>{errors.number}</ErrorMessage>}\n              </FormField>\n\n              <Button type=\"submit\" variant=\"contained\"\n              sx={{ mt: 2,  bgcolor: \"#151b1e\", fontSize: \"12px\" }}>Add contact</Button>\n              \n            </Form>\n          );\n        }}\n    </Formik>\n  )\n}\n\n","import { Formik } from 'formik';\r\nimport { Button} from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateContact } from 'redux/operations';\r\nimport { ErrorMessage, Field, FormField, Form } from 'components/ContactForm/ContactForm.styled';\r\nimport { validateName } from 'formValidation/formValidation';\r\nimport { validateNumber } from 'formValidation/formValidation';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const UpdateContactForm = ({ id, name, number }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (values) => {\r\n    if (\r\n      name.trim().toLowerCase() === values.name.trim().toLowerCase() &&\r\n      number === values.number\r\n    ) {\r\n     alert('Please make changes to this contact');\r\n      return;\r\n    }\r\n    dispatch(updateContact({ id, values }))\r\n  };\r\n\r\n\r\n  return (\r\n    <Formik initialValues={{ name: name, number: number }} onSubmit={handleSubmit} enableReinitialize={true}>\r\n          {({ errors, touched }) => {\r\n          return (\r\n            <Form>\r\n              <FormField>\r\n                Name\r\n                <Field id=\"name\" name=\"name\" type=\"text\" validate={validateName} />\r\n                {errors.name && touched.name && <ErrorMessage>{errors.name}</ErrorMessage>}\r\n                </FormField>\r\n              <FormField>\r\n                Number\r\n                <Field id=\"number\" name=\"number\" type=\"tel\" validate={validateNumber} />\r\n                {errors.number && touched.number && <ErrorMessage>{errors.number}</ErrorMessage>}\r\n              </FormField>\r\n\r\n              <Button type=\"submit\" variant=\"contained\"\r\n              sx={{ mt: 2,  bgcolor: \"#151b1e\", fontSize: \"12px\" }}>Update contact</Button>\r\n              \r\n            </Form>\r\n          );\r\n        }}\r\n    </Formik>\r\n    \r\n  );\r\n};\r\n\r\n\r\nUpdateContactForm.propTypes = {\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired, \r\n        id: PropTypes.string.isRequired,\r\n   \r\n}\r\n","import { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/operations\";\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport Modal from '@mui/material/Modal';\nimport { Box } from \"@mui/material\";\nimport { createPortal } from \"react-dom\";\nimport { UpdateContactForm } from \"components/ContactModal/UpdateContactForm\";\nimport {Fab, ListItemIcon, ListItemText, ListItemSecondaryAction, Typography} from '@mui/material';\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\n\nexport const Contact = ({name, number, id}) => {\n    const dispatch = useDispatch();\n    const [open, setOpen] = useState(false);\n    const handleDelete = () => dispatch(deleteContact(id));\n\n    const modalRoot = document.querySelector(\"#modal-root\");\n\n    return (\n      <>\n        <ListItemIcon><LocalPhoneIcon /></ListItemIcon>\n        <ListItemText\n        primary={\n          <Typography\n            type=\"body2\"\n            style={{\n              color: \"#000000bf\",\n              fontWeight: '600',\n            }}\n          >\n            {name}\n          </Typography>\n        }\n        secondary={\n          <Typography\n            type=\"body2\"\n            style={{\n              color: \"#000000bf\",\n            }}\n          >\n            {number}\n          </Typography>\n        }\n      />\n            <ListItemSecondaryAction\n        sx={{\n          display: 'flex',\n          flexDirection: { xs: 'column', md: 'row' },\n          mr: \"10px\",\n        }}\n      >\n        <Fab\n          aria-label=\"edit contact\"\n          onClick={() => setOpen(true)}\n          edge=\"end\"\n          sx={{\n            bgcolor: \"#b3b3b3\",\n            mb: { xs: '5px', md: '0' },\n            mr: { md: '10px' },\n            width: \"40px\",\n            height: \"35px\",\n          }}\n        >\n          <EditIcon />\n        </Fab>\n        <Fab\n          aria-label=\"delete contact\"\n          onClick={handleDelete}\n          edge=\"end\"\n          sx={{\n            bgcolor: \"#b3b3b3\",\n            width: \"40px\",\n            height: \"35px\",\n          }}\n        >\n          <DeleteForeverIcon />\n        </Fab>\n      </ListItemSecondaryAction>\n\n        {/* Modal window */}\n            {open && createPortal(\n              <Modal open={open}\n                onClose={() => setOpen(false)}>\n                <Box sx={{position: 'absolute',\n                  top: '50%',\n                  left: '50%',\n                  transform: 'translate(-50%, -50%)',\n                  width: 400,\n                  bgcolor: '#687074',\n                  borderRadius: \"10px\",\n                  boxShadow: 24,\n                  p: 4,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\"\n                }}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" color=\"#e5e1e1\" mb=\"25px\">\n            Please, update your contact here:\n          </Typography>\n            <UpdateContactForm \n                            id={id}\n                            name={name}\n                            number={number}\n                             />      \n        </Box>\n        </Modal>,\n        modalRoot\n    )}\n            </>\n)\n}\n\nContact.propTypes = {\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired, \n        id: PropTypes.string.isRequired,\n   \n}","import { useSelector } from \"react-redux\";\nimport { Contact } from \"components/Contact/Contact\";\nimport { selectVisibleContacts } from \"redux/selectors\";\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\n\n\n\nexport const ContactList = () => {\n    const visibleContacts = useSelector(selectVisibleContacts);\n    \n    \n\n    return <List sx={{ width: '100%', maxWidth: 360, display: 'flex', flexDirection: 'column', alignItems: 'center', gap: \"10px\"}}>\n        {visibleContacts.map(({ id = 0, name = \"\", number = \"\" }) => <ListItem key={id} component=\"div\" disableGutters alignItems=\"center\" sx={{backgroundColor: \"#808b91\", borderRadius: '6px',\n                  boxShadow: 6, p: '10px'}}>\n            <Contact name={name} number={number} id={id} /></ListItem>)}</List>\n               \n        \n    };","import { useDispatch, useSelector } from \"react-redux\";\nimport InputBase from '@mui/material/InputBase';\nimport { handleFilter } from \"redux/filtersSlice\";\nimport { selectFilter } from \"redux/selectors\";\n\n\nexport const Filter = () => {\nconst dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n    \n    \n\n    return (\n        <InputBase type=\"text\" value={filter} onChange={(e) => dispatch(handleFilter(e.target.value))} fullWidth placeholder=\"Find contact by name\" autoFocus variant=\"outlined\"\n            sx={{ border: \"1px solid #a7a0a0\", borderRadius: \"6px\", width: \"350px\", height: \"45px\", padding: \"20px\", mb: \"20px\", color: \"white\" }} />\n        \n    )\n}\n\n","import { ContactForm } from \"components/ContactForm/ContactForm\";\r\nimport { ContactList } from \"components/ContactList/ContactList\";\r\nimport { Filter } from \"components/Filter/Filter\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectError, selectIsLoading } from \"redux/selectors\";\r\nimport { fetchContacts } from \"redux/operations\";\r\nimport Grid from '@mui/material/Paper';\r\nimport { Container, Typography } from '@mui/material';\r\nimport Image from '../images/main.jpg';\r\nimport { Box } from '@mui/material';\r\n\r\n\r\nconst Contacts = () => {\r\n    const dispatch = useDispatch();\r\n    const isLoading = useSelector(selectIsLoading);\r\n    const error = useSelector(selectError);\r\n  \r\n\r\n    useEffect(() => {\r\n        dispatch(fetchContacts())\r\n        \r\n    }, [dispatch])\r\n\r\n    return <Grid component=\"main\" sx={{ backgroundImage: `url(${Image})`, backgroundSize: \"cover\", backgroundPosition: 'center', height: '100vh', opacity: \"0.92\" }}>\r\n        <Container maxWidth=\"lg\" sx={{pt:\"60px\", display: \"flex\", gap: \"250px\", alignItems: \"flex-start\"}}>\r\n        {isLoading && !error && <b>Request in progress...</b>}\r\n            {!isLoading && <><Box sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                borderRadius: \"10px\",\r\n                pl: \"40px\"\r\n            }}><Typography component=\"h1\" variant=\"h4\" color=\"white\" mb=\"20px\">My contacts</Typography><Filter /><ContactList /></Box><ContactForm /></>}\r\n            </Container>\r\n    </Grid>\r\n};\r\n\r\nexport default Contacts;"],"names":["Form","styled","FormikForm","FormField","Field","FormikField","ErrorMessage","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","filterName","contact","name","toLowerCase","includes","validateName","value","test","validateNumber","ContactForm","useSelector","dispatch","useDispatch","initialValues","number","onSubmit","values","actions","find","alert","addContact","resetForm","errors","touched","Typography","component","variant","color","type","validate","Button","sx","mt","bgcolor","fontSize","UpdateContactForm","id","trim","updateContact","enableReinitialize","Contact","useState","open","setOpen","modalRoot","document","querySelector","ListItemIcon","LocalPhone","ListItemText","primary","style","fontWeight","secondary","ListItemSecondaryAction","display","flexDirection","xs","md","mr","Fab","onClick","edge","mb","width","height","Edit","deleteContact","DeleteForever","createPortal","Modal","onClose","Box","position","top","left","transform","borderRadius","boxShadow","p","alignItems","ContactList","visibleContacts","List","maxWidth","gap","map","ListItem","disableGutters","backgroundColor","Filter","InputBase","onChange","e","handleFilter","target","fullWidth","placeholder","autoFocus","border","padding","useEffect","fetchContacts","backgroundImage","Image","backgroundSize","backgroundPosition","opacity","Container","pt","pl"],"sourceRoot":""}