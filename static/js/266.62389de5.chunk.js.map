{"version":3,"file":"static/js/266.62389de5.chunk.js","mappings":"sNAOOA,GAAQC,EAAAA,EAAAA,KAaf,UAXc,WACT,OAAO,SAAC,IAAD,CAAeD,MAAOA,EAAtB,UACH,SAAC,IAAD,CAAME,UAAU,OAAOC,GAAI,CAAEC,gBAAgB,OAAD,OAASC,EAAT,KAAmBC,eAAgB,QAASC,mBAAoB,SAAUC,OAAQ,SAA9H,UACI,UAAC,IAAD,CAAWC,SAAS,KAAKN,GAAI,CAACO,GAAG,QAAjC,WACA,SAAC,IAAD,CAAYC,MAAM,QAAQT,UAAU,KAAKU,SAAS,OAAOC,WAAW,MAAMV,GAAI,CAACW,WAAY,GAA3F,yCACI,SAAC,IAAD,CAAYZ,UAAU,IAAIS,MAAM,QAAQC,SAAS,OAAjD,oEAIhB,C,mGCbD,MAJkCG,EAAAA,cAAoB,MCCvC,SAASC,IAMtB,OALcD,EAAAA,WAAiBE,EAMhC,CCTD,IACA,EADoC,oBAAXC,QAAyBA,OAAOC,IAC9BD,OAAOC,IAAI,cAAgB,mB,SC+DtD,MApCA,SAAuBC,GACrB,IACEC,EAEED,EAFFC,SACOC,EACLF,EADFpB,MAEIuB,EAAaP,IAMbhB,EAAQe,EAAAA,SAAc,WAC1B,IAAMS,EAAwB,OAAfD,EAAsBD,EA9BzC,SAA8BC,EAAYD,GACxC,MAA0B,oBAAfA,EACWA,EAAWC,IAQ1BE,EAAAA,EAAAA,GAAS,CAAC,EAAGF,EAAYD,EACjC,CAmBqDI,CAAqBH,EAAYD,GAInF,OAHc,MAAVE,IACFA,EAAOG,GAAyB,OAAfJ,GAEZC,CACR,GAAE,CAACF,EAAYC,IAChB,OAAoBK,EAAAA,EAAAA,KAAKX,EAAAA,SAAuB,CAC9CY,MAAO7B,EACPqB,SAAUA,GAEb,E,oBC1CKS,EAAc,CAAC,EACrB,SAASC,EAAgBC,EAASC,EAAYX,GAA+B,IAAnBY,EAAmB,wDAC3E,OAAOnB,EAAAA,SAAc,WACnB,IAAMoB,EAAgBH,GAAUC,EAAWD,IAAyBC,EACpE,GAA0B,oBAAfX,EAA2B,CACpC,IAAMc,EAAcd,EAAWa,GACzBE,EAASL,GAAUP,EAAAA,EAAAA,GAAS,CAAC,EAAGQ,GAAL,UAC9BD,EAAUI,IACRA,EAGL,OAAIF,EACK,kBAAMG,CAAN,EAEFA,CACR,CACD,OAAOL,GAAUP,EAAAA,EAAAA,GAAS,CAAC,EAAGQ,GAAL,UACtBD,EAAUV,KACRG,EAAAA,EAAAA,GAAS,CAAC,EAAGQ,EAAYX,EAC/B,GAAE,CAACU,EAASC,EAAYX,EAAYY,GACtC,CAqDD,MA5CA,SAAuBd,GACrB,IACEC,EAGED,EAHFC,SACOC,EAELF,EAFFpB,MACAgC,EACEZ,EADFY,QAEIC,GAAaK,EAAAA,EAAAA,GAAuBR,GACpCS,EAAoBC,KAAqBV,EAMzCW,EAAcV,EAAgBC,EAASC,EAAYX,GACnDoB,EAAeX,EAAgBC,EAASO,EAAmBjB,GAAY,GAC7E,OAAoBM,EAAAA,EAAAA,KAAKe,EAAkB,CACzC3C,MAAO0C,EACPrB,UAAuBO,EAAAA,EAAAA,KAAKgB,EAAAA,EAAAA,SAAmC,CAC7Df,MAAOY,EACPpB,SAAUA,KAGf,E,SCzDKwB,EAAY,CAAC,SAMJ,SAASC,EAAcC,GAChC,IACOC,EACLD,EADF/C,MAEFoB,GAAQ6B,EAAAA,EAAAA,GAA8BF,EAAMF,GACxCK,EAAcF,EAAWG,EAAAA,GAC/B,OAAoBvB,EAAAA,EAAAA,KAAKwB,GAAqB3B,EAAAA,EAAAA,GAAS,CAAC,EAAGL,EAAO,CAChEY,QAASkB,EAAcC,EAAAA,OAAWE,EAClCrD,MAAOkD,GAAeF,IAEzB,C","sources":["pages/Home.js","../node_modules/@mui/private-theming/useTheme/ThemeContext.js","../node_modules/@mui/private-theming/useTheme/useTheme.js","../node_modules/@mui/private-theming/ThemeProvider/nested.js","../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","../node_modules/@mui/material/styles/ThemeProvider.js"],"sourcesContent":["import Grid from '@mui/material/Paper';\r\nimport { Container, Typography } from '@mui/material';\r\nimport Image from '../images/main.jpg';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\n\r\n\r\n const theme = createTheme();\r\n \r\n const Home = () => {\r\n     return <ThemeProvider theme={theme}>\r\n         <Grid component=\"main\" sx={{ backgroundImage: `url(${Image})`, backgroundSize: \"cover\", backgroundPosition: 'center', height: '100vh' }} >\r\n             <Container maxWidth=\"lg\" sx={{pt:\"70px\"}} >\r\n             <Typography color=\"white\" component=\"h1\" fontSize=\"70px\" fontWeight=\"600\" sx={{textShadow: 4}}>Welcome to the Phone Book!</Typography>\r\n                 <Typography component=\"p\" color=\"white\" fontSize=\"25px\">Your one-stop online telephone directory service</Typography>\r\n                 </Container>\r\n         </Grid>\r\n         </ThemeProvider>\r\n}\r\n\r\nexport default Home;","import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested';\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return _extends({}, outerTheme, localTheme);\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport { exactProp } from '@mui/utils';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from '../useThemeWithoutDefault';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? _extends({}, upperTheme, {\n        [themeId]: mergedTheme\n      }) : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? _extends({}, upperTheme, {\n      [themeId]: localTheme\n    }) : _extends({}, upperTheme, localTheme);\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: children\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"theme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\nimport THEME_ID from './identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider(_ref) {\n  let {\n      theme: themeInput\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const scopedTheme = themeInput[THEME_ID];\n  return /*#__PURE__*/_jsx(SystemThemeProvider, _extends({}, props, {\n    themeId: scopedTheme ? THEME_ID : undefined,\n    theme: scopedTheme || themeInput\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;"],"names":["theme","createTheme","component","sx","backgroundImage","Image","backgroundSize","backgroundPosition","height","maxWidth","pt","color","fontSize","fontWeight","textShadow","React","useTheme","ThemeContext","Symbol","for","props","children","localTheme","outerTheme","output","_extends","mergeOuterLocalTheme","nested","_jsx","value","EMPTY_THEME","useThemeScoping","themeId","upperTheme","isPrivate","resolvedTheme","mergedTheme","result","useThemeWithoutDefault","upperPrivateTheme","usePrivateTheme","engineTheme","privateTheme","MuiThemeProvider","StyledEngineThemeContext","_excluded","ThemeProvider","_ref","themeInput","_objectWithoutPropertiesLoose","scopedTheme","THEME_ID","SystemThemeProvider","undefined"],"sourceRoot":""}