{"version":3,"file":"static/js/942.e6fedb92.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactModal/ModalForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as FormikForm, Field as FormikField} from 'formik';\n\nexport const Form = styled(FormikForm)`\nwidth: 350px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\npadding: 20px;\nborder: 1px solid #2a2a2a;\ngap: 20px;\nmargin-bottom: 10px;\nbackground-color: #37474f; \nborder-radius: 10px;\nbox-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n`\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  color: #a7a0a0;\n  font-size: 15px;\n`;\n\nexport const Field = styled(FormikField)`\nwidth: 300px;\nheight: 30px;\nborder: \"1px solid #a7a0a0\";\nborder-radius: 6px;\nbackground-color: transparent;\ncolor: white;\npadding: 5px;\n`\n\nexport const Button = styled.button`\nwidth: 100px;\nheight: 25px;\nbackground-color: #FAFBFC;\nborder: 1px solid #878787;\nborder-radius: 6px;\nbox-shadow: rgba(27, 31, 35, 0.04) 0 1px 0, rgba(255, 255, 255, 0.25) 0 1px 0 inset;\ncolor: #24292E;\ncursor: pointer;\nfont-size: 14px;\nfont-weight: 500;\n&:hover {\n  background-color: #8cb6fa;\n}\n`\n\nexport const ErrorMessage = styled.span`\n  color: red;\n  font-size: 12px;\n`;","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterName) => {\n        if (filterName !== \"\") {\n           return contacts.filter((contact => contact.name.toLowerCase().includes(filterName.toLowerCase())));\n        };\n        return contacts;\n        \n    }\n);\n\n","import { Formik } from 'formik';\nimport { ErrorMessage, Field, Form, FormField } from './ContactForm.styled';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact} from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport { Button } from '@mui/material';\nimport { Typography } from '@mui/material';\n\nfunction validateName(value) {\n   let error;\n   if (!value) {\n     error = 'Required';\n   } else if (!/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/i.test(value)) {\n     error = 'Invalid name';\n   }\n   return error;\n }\n \n function validateNumber(value) {\n   let error;\n   if (!value) {\n     error = 'Required';\n   } else if (!/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(value)) {\n     error = 'Invalid number';\n   }\n   return error;\n }\n     \nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n    \n    return (\n    <Formik\n        initialValues={{ name: \"\", number: \"\" }}\n        onSubmit={(values, actions) => {\n          const sameName = contacts.find(contact => contact.name.toLowerCase().includes(values.name.toLowerCase()));\n          if (sameName) {\n            alert(`${values.name} is already in contacts`)\n          } else {\n            dispatch(addContact(values));\n          };\n          \n          actions.resetForm();\n         \n            }}>\n    {({ errors, touched }) => {\n          return (\n            <Form>\n              <Typography component=\"h1\" variant=\"h5\" color=\"#e5e1e1\" >Contact form</Typography>\n              <FormField>\n                Name\n                <Field name=\"name\" type=\"text\" validate={validateName} />\n                {errors.name && touched.name && <ErrorMessage>{errors.name}</ErrorMessage>}\n              </FormField>\n              <FormField>\n                Number\n                <Field name=\"number\" type=\"tel\" validate={validateNumber} />\n                {errors.number && touched.number && <ErrorMessage>{errors.number}</ErrorMessage>}\n              </FormField>\n\n              <Button type=\"submit\" variant=\"contained\"\n              sx={{ mt: 2,  bgcolor: \"#151b1e\", fontSize: \"12px\" }}>Add contact</Button>\n              \n            </Form>\n          );\n        }}\n    </Formik>\n  )\n}\n\n","import { useFormik } from 'formik';\r\n\r\nimport {\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  FormHelperText,\r\n  InputAdornment,\r\n  InputLabel,\r\n  FilledInput,\r\n} from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateContact } from 'redux/operations';\r\nimport { Person, PhoneIphone } from '@mui/icons-material';\r\n\r\nexport const UpdateContactForm = ({ onClose, id, name, number }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (values, resetForm) => {\r\n    if (\r\n      name.trim().toLowerCase() === values.name.trim().toLowerCase() &&\r\n      number === values.number\r\n    ) {\r\n     alert('Please make changes to the contact');\r\n      return;\r\n    }\r\n    dispatch(updateContact({ id, values }))\r\n    resetForm();\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name,\r\n      number,\r\n    },\r\n    onSubmit: handleSubmit,\r\n  });\r\n\r\n  return (\r\n      <form onSubmit={formik.handleSubmit}>\r\n          <Grid item xs={12}>\r\n            <FormControl variant=\"filled\" fullWidth>\r\n              <InputLabel htmlFor=\"name\">Name</InputLabel>\r\n              <FilledInput\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <Person />\r\n                  </InputAdornment>\r\n                }\r\n                fullWidth\r\n                autoFocus\r\n                id=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n                type=\"name\"\r\n                label=\"Name\"\r\n            error={formik.touched.name && Boolean(formik.errors.name)}\r\n            sx={{color: \"#e5e1e1\", width: \"320px\"}}\r\n              />\r\n              <FormHelperText error={true}>\r\n                {formik.touched.name && formik.errors.name}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12}></Grid>\r\n          <Grid item xs={12}>\r\n            <FormControl variant=\"filled\" fullWidth>\r\n              <InputLabel htmlFor=\"number\">Number</InputLabel>\r\n              <FilledInput\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <PhoneIphone />\r\n                  </InputAdornment>\r\n                }\r\n                fullWidth\r\n                id=\"number\"\r\n                value={formik.values.number}\r\n                onChange={formik.handleChange}\r\n                type=\"text\"\r\n                label=\"Number\"\r\n            error={formik.touched.number && Boolean(formik.errors.number)}\r\n            sx={{color: \"#e5e1e1\", width: \"320px\", fontSize: \"16px\"}}\r\n              />\r\n              <FormHelperText error={true}>\r\n                {formik.touched.number && formik.errors.number}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n        \r\n\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, bgcolor: \"#151b1e\", fontSize: \"12px\" }}\r\n        >\r\n          Update contact\r\n        </Button>\r\n      </form>\r\n    \r\n  );\r\n};\r\n\r\n\r\n\r\n","import { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/operations\";\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport Modal from '@mui/material/Modal';\nimport { Box } from \"@mui/material\";\nimport { createPortal } from \"react-dom\";\nimport { UpdateContactForm } from \"components/ContactModal/ModalForm\";\nimport {Fab, ListItemIcon, ListItemText, ListItemSecondaryAction, Typography} from '@mui/material';\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\n\nexport const Contact = ({name, number, id, onClose}) => {\n    const dispatch = useDispatch();\n    const [open, setOpen] = useState(false);\n    const handleDelete = () => dispatch(deleteContact(id));\n\n    const closeModal = () => setOpen(false);\n    const modalRoot = document.querySelector(\"#modal-root\");\n\n    return (\n      <>\n        <ListItemIcon><LocalPhoneIcon /></ListItemIcon>\n        <ListItemText\n        primary={\n          <Typography\n            type=\"body2\"\n            style={{\n              color: \"#000000bf\",\n              fontWeight: '600',\n            }}\n          >\n            {name}\n          </Typography>\n        }\n        secondary={\n          <Typography\n            type=\"body2\"\n            style={{\n              color: \"#000000bf\",\n            }}\n          >\n            {number}\n          </Typography>\n        }\n      />\n            <ListItemSecondaryAction\n        sx={{\n          display: 'flex',\n          flexDirection: { xs: 'column', md: 'row' },\n          mr: \"10px\",\n        }}\n      >\n        <Fab\n          aria-label=\"edit contact\"\n          onClick={() => setOpen(true)}\n          edge=\"end\"\n          sx={{\n            bgcolor: \"#b3b3b3\",\n            mb: { xs: '5px', md: '0' },\n            mr: { md: '10px' },\n            width: \"40px\",\n            height: \"35px\",\n          }}\n        >\n          <EditIcon />\n        </Fab>\n        <Fab\n          aria-label=\"delete contact\"\n          onClick={handleDelete}\n          edge=\"end\"\n          sx={{\n            bgcolor: \"#b3b3b3\",\n            width: \"40px\",\n            height: \"35px\",\n          }}\n        >\n          <DeleteForeverIcon />\n        </Fab>\n      </ListItemSecondaryAction>\n\n        {/* Modal window */}\n            {open && createPortal(\n              <Modal open={open}\n                onClose={closeModal}>\n                <Box sx={{position: 'absolute',\n                  top: '50%',\n                  left: '50%',\n                  transform: 'translate(-50%, -50%)',\n                  width: 400,\n                  bgcolor: '#687074',\n                  borderRadius: \"10px\",\n                  boxShadow: 24,\n                  p: 4,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\"\n                }}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" color=\"#e5e1e1\" mb=\"25px\">\n            Please, update your contact here:\n          </Typography>\n            <UpdateContactForm \n                            id={id}\n                            name={name}\n                            number={number}\n                            onClose={onClose} />      \n        </Box>\n        </Modal>,\n        modalRoot\n    )}\n            </>\n)\n}\n\nContact.propTypes = {\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired, \n        id: PropTypes.string.isRequired,\n   \n}","import { useSelector } from \"react-redux\";\nimport { Contact } from \"components/Contact/Contact\";\nimport { selectVisibleContacts } from \"redux/selectors\";\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\n\n\n\nexport const ContactList = () => {\n    const visibleContacts = useSelector(selectVisibleContacts);\n    \n    \n\n    return <List sx={{ width: '100%', maxWidth: 360, display: 'flex', flexDirection: 'column', alignItems: 'center', gap: \"10px\"}}>\n        {visibleContacts.map(({ id = 0, name = \"\", number = \"\" }) => <ListItem key={id} component=\"div\" disableGutters alignItems=\"center\" sx={{backgroundColor: \"#808b91\", borderRadius: '6px',\n                  boxShadow: 6, p: '10px'}}>\n            <Contact name={name} number={number} id={id} /></ListItem>)}</List>\n               \n        \n    };","import { useDispatch, useSelector } from \"react-redux\";\nimport InputBase from '@mui/material/InputBase';\nimport { handleFilter } from \"redux/filtersSlice\";\nimport { selectFilter } from \"redux/selectors\";\n\n\nexport const Filter = () => {\nconst dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n    \n    \n   \n\n    return (\n        <InputBase type=\"text\" value={filter} onChange={(e) => dispatch(handleFilter(e.target.value))} fullWidth placeholder=\"Find contact by name\" autoFocus variant=\"outlined\"\n            sx={{ border: \"1px solid #a7a0a0\", borderRadius: \"6px\", width: \"350px\", height: \"45px\", padding: \"20px\", mb: \"20px\", color: \"white\" }} />\n        \n    )\n}\n\n","import { ContactForm } from \"components/ContactForm/ContactForm\";\r\nimport { ContactList } from \"components/ContactList/ContactList\";\r\nimport { Filter } from \"components/Filter/Filter\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectError, selectIsLoading } from \"redux/selectors\";\r\nimport { fetchContacts } from \"redux/operations\";\r\nimport Grid from '@mui/material/Paper';\r\nimport { Container, Typography } from '@mui/material';\r\nimport Image from '../images/main.jpg';\r\nimport { Box } from '@mui/material';\r\n\r\n\r\nconst Contacts = () => {\r\n    const dispatch = useDispatch();\r\n    const isLoading = useSelector(selectIsLoading);\r\n    const error = useSelector(selectError);\r\n  \r\n\r\n    useEffect(() => {\r\n        dispatch(fetchContacts())\r\n        \r\n    }, [dispatch])\r\n\r\n    return <Grid component=\"main\" sx={{ backgroundImage: `url(${Image})`, backgroundSize: \"cover\", backgroundPosition: 'center', height: '100vh', opacity: \"0.92\" }}>\r\n        <Container maxWidth=\"lg\" sx={{pt:\"60px\", display: \"flex\", gap: \"250px\", alignItems: \"flex-start\"}}>\r\n        {isLoading && !error && <b>Request in progress...</b>}\r\n            {!isLoading && <Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            borderRadius: \"10px\",\r\n          pl: \"40px\"\r\n          }}><Typography component=\"h1\" variant=\"h4\" color=\"white\" mb=\"20px\">My contacts</Typography><Filter /><ContactList /></Box>}\r\n             <ContactForm />\r\n            </Container>\r\n    </Grid>\r\n};\r\n\r\nexport default Contacts;"],"names":["Form","styled","FormikForm","FormField","Field","FormikField","ErrorMessage","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","filterName","contact","name","toLowerCase","includes","validateName","value","test","validateNumber","ContactForm","useSelector","dispatch","useDispatch","initialValues","number","onSubmit","values","actions","find","alert","addContact","resetForm","errors","touched","Typography","component","variant","color","type","validate","sx","mt","bgcolor","fontSize","UpdateContactForm","onClose","id","formik","useFormik","trim","updateContact","handleSubmit","Grid","item","xs","FormControl","fullWidth","InputLabel","htmlFor","FilledInput","endAdornment","InputAdornment","position","Person","autoFocus","onChange","handleChange","label","Boolean","width","FormHelperText","PhoneIphone","Contact","useState","open","setOpen","modalRoot","document","querySelector","ListItemIcon","LocalPhone","ListItemText","primary","style","fontWeight","secondary","ListItemSecondaryAction","display","flexDirection","md","mr","Fab","onClick","edge","mb","height","Edit","deleteContact","DeleteForever","createPortal","Modal","Box","top","left","transform","borderRadius","boxShadow","p","alignItems","ContactList","visibleContacts","List","maxWidth","gap","map","ListItem","disableGutters","backgroundColor","Filter","InputBase","e","handleFilter","target","placeholder","border","padding","useEffect","fetchContacts","backgroundImage","Image","backgroundSize","backgroundPosition","opacity","Container","pt","pl"],"sourceRoot":""}